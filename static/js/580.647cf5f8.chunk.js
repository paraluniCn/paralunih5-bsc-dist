"use strict";(self.webpackChunkparaluni_poseidon=self.webpackChunkparaluni_poseidon||[]).push([[580],{2580:(t,e,a)=>{a.r(e),a.d(e,{default:()=>G});var o=a(5043);const n={text1:"MigrateAllChef_text1__dbWqu",log:"MigrateAllChef_log__EFumF",text2:"MigrateAllChef_text2__v4N8N",text3:"MigrateAllChef_text3__1Lopl"};var s=a(1473),r=a(4385),c=a(9951),i=a(1977),l=a(775);const d=()=>(0,c.A)({abi:"MasterChef",address:i.A.OldMasterChef,params:[],method:"poolLength",type:"call"}),p=t=>{const e=[...Array(t+1).keys()].map((t=>({abi:"MasterChef",address:i.A.OldMasterChef,params:[t],method:"poolInfo"})));return(0,l.A)(e)},f=t=>{const e=[...Array(t+1).keys()].map((t=>({abi:"MasterChef",address:i.A.MasterChef,params:[t],method:"poolInfo"})));return(0,l.A)(e)},u=(t,e)=>{const a=[...Array(t+1).keys()].map((t=>({abi:"MasterChef",address:i.A.OldMasterChef,params:[t,e],method:"userInfo"})));return(0,l.A)(a)},h=(t,e)=>(0,c.A)({abi:"MasterChef",address:i.A.OldMasterChef,params:[t,e],method:"withdraw",type:"send",isRejectError:!0}),m=(t,e)=>(0,c.A)({abi:"MasterChef",address:i.A.OldMasterChef,params:[t,e],method:"withdraw_tickets",type:"send",isRejectError:!0}),y=(t,e)=>(0,c.A)({abi:"MasterChef",address:i.A.OldMasterChef,params:[t,e],method:"ticket_staked_array",type:"call"}),g=(t,e)=>(0,c.A)({abi:"ParaTicket",address:t,params:[e],method:"tokensOfOwner",type:"call"}),v=(t,e)=>(0,c.A)({abi:"ParaTicket",address:t,params:[e,i.A.MasterChef],method:"isApprovedForAll",type:"call"}),P=(t,e)=>(0,c.A)({abi:"ParaTicket",address:t,params:[e],method:"getApproved",type:"call"}),w=(t,e)=>(0,c.A)({abi:"ParaTicket",address:t,params:[e,!0],method:"setApprovalForAll",type:"send",isRejectError:!0}),A=(t,e,a)=>(0,c.A)({abi:"ParaTicket",address:t,params:[e,a],method:"approve",type:"send",isRejectError:!0}),I=t=>(0,c.A)({abi:"MasterChef",address:i.A.MasterChef,params:[t],method:"deposit_all_tickets",type:"send",isRejectError:!0}),x=(t,e)=>(0,c.A)({abi:"erc20",address:t,params:[e],method:"balanceOf",type:"call"}),C=(t,e,a)=>(0,c.A)({abi:"erc20",address:t,params:[e,a],method:"allowance",type:"call"}),b=(t,e)=>(0,c.A)({abi:"MasterChef",address:i.A.MasterChef,params:[t,e],method:"deposit",type:"send",isRejectError:!0}),k=()=>(0,c.A)({abi:"SousChef",address:i.A.OldSousChef,params:[],method:"poolLength",type:"call"}),D=(t,e)=>{const a=[...Array(t+1).keys()].map((t=>({abi:"SousChef",address:i.A.OldSousChef,params:[e,t],method:"userPools"})));return(0,l.A)(a)},S=t=>{const e=[...Array(t+1).keys()].map((t=>({abi:"SousChef",address:i.A.OldSousChef,params:[t],method:"pools"})));return(0,l.A)(e)},M=t=>{const e=[...Array(t+1).keys()].map((t=>({abi:"SousChef",address:i.A.SousChef,params:[t],method:"pools"})));return(0,l.A)(e)},T=(t,e)=>(0,c.A)({abi:"SousChef",address:i.A.OldSousChef,params:[t,e],method:"userNoFeeTime",type:"call"}),N=(t,e)=>(0,c.A)({abi:"SousChef",address:i.A.OldSousChef,params:[t,e],method:"getUserPoolRegular",type:"call"}),O=(t,e,a,o,n)=>(0,c.A)({abi:"SousChef",address:i.A.OldSousChef,params:[t,e,a,o,n],method:"withdraw",type:"send",isRejectError:!0}),_=(t,e)=>(0,c.A)({abi:"SousChef",address:i.A.SousChef,params:[t,e,["0x0000000000000000000000000000000000000000","0x0000000000000000000000000000000000000000"],[0,0]],method:"deposit",type:"send",isRejectError:!0}),j=(t,e)=>(0,c.A)({abi:"SousChef",address:i.A.OldSousChef,params:[t,e],method:"pendingV42",type:"call"}),F=()=>(0,c.A)({abi:"SousChef",address:i.A.OldSousChef,params:[],method:"V42_USDT",type:"call"}),L=t=>(0,c.A)({abi:"ParaPair",address:t,params:[],method:"getReserves",type:"call"}),E=(t,e,a,o,n)=>(0,c.A)({abi:"SousChef",address:i.A.OldSousChef,params:[t,e,a,o,n],method:"safeClaim",type:"send",isRejectError:!0}),R=async t=>{try{return await(0,c.A)({abi:"ParaPair",address:t,params:[],method:"token0",type:"call"}),await(0,c.A)({abi:"ParaPair",address:t,params:[],method:"token1",type:"call"}),!0}catch(t){return!1}};var W=a(1045),B=a(8762),V=a(7356),q=a(9338),U=a(579);function G(){const{user:t}=(0,s.A)(),[e,a]=(0,o.useState)(!1),[c,l]=(0,o.useState)([]),G=(0,o.useRef)(null);return(0,o.useEffect)((()=>{G.current&&(G.current.scrollTop=G.current.scrollHeight)}),[c]),(0,U.jsxs)(U.Fragment,{children:[(0,U.jsx)("div",{className:"common-block ",children:(0,U.jsx)("div",{className:"button-common button-click  height-56 ".concat(e&&"disable-button"),onClick:async()=>{t.address?e||(a(!0),await(async()=>{l((e=>[...e,{type:1,text:"Starting MasterChef migration for user: ".concat(t.address,"...")}]));const e=await d();if(Number(e)<=1)return void l((t=>[...t,{type:2,text:"Fatal: Could not fetch pool length. Aborting."}]));l((t=>[...t,{type:1,text:"Found ".concat(e," pools in the old MasterChef.")}]));const a=await p(Number(e)-1),o=await f(Number(e)-1),n=await u(Number(e)-1,t.address);if(!a||a.length<=0||!n||n.length<=0)l((t=>[...t,{type:2,text:"迁移失败"}]));else{for(let d=0;d<e;d++)try{let e,p;l((t=>[...t,{type:1,text:"--- Processing MasterChef PID ".concat(d," ---")}]));const f=a[d],u="1"===f.pooltype.toString(),k=n[d].amount,D=(0,W.A)(k).isGreaterThan(0);if(!D&&!u){l((t=>[...t,{type:1,text:"PID ".concat(d,": No funds or VIP tickets to migrate. Skipping.")}]));continue}if(D){var s;const t=await h(d,k),a={...t,events:t&&t.events?Object.values(t.events):[]};l((t=>{var e;return[...t,{type:1,text:"PID ".concat(d,": Transaction receipt events: ").concat(null===(e=a.events)||void 0===e?void 0:e.map((t=>({name:t.event,args:t.returnValues}))))}]}));let o=null===(s=a.events)||void 0===s?void 0:s.find((t=>"Withdraw"===t.event&&t.returnValues.pid==d));var r,c;o||(o=null===(r=a.events)||void 0===r?void 0:r.find((t=>"Withdraw"===t.event))),o||(o=null===(c=a.events)||void 0===c?void 0:c.find((t=>t.event&&t.event.toLowerCase().includes("withdraw")))),o?(p=o.returnValues.amount,e=f.lpToken,l((t=>[...t,{type:1,text:"PID ".concat(d,": Found event: ").concat(o.event,", amount: ").concat((0,B.fn)((0,B.fm)(p)))}]))):(l((t=>{var e;return[...t,{type:2,text:"PID ".concat(d,": Could not find Withdraw event. Available events:").concat(null===(e=a.events)||void 0===e?void 0:e.map((t=>t.event)))}]})),p=995n*k/1000n,e=f.lpToken,l((t=>[...t,{type:1,text:"PID ".concat(d,": Using staked amount * 99.5% as fallback: ").concat((0,B.fn)((0,B.fm)(p)))}])))}if(u){const e=f.ticket,a=await y(t.address,e);if(a.length>0){l((t=>[...t,{type:1,text:"PID ".concat(d,": Migrating ").concat(a.length," tickets...")}]));for(const t of a)await m(d,t)}const o=await g(e,t.address);if(o.length>0){if(await v(e,t.address))l((t=>[...t,{type:1,text:"PID ".concat(d,": New MasterChef already approved for all tickets")}]));else{l((t=>[...t,{type:1,text:"PID ".concat(d,": New MasterChef not approved for all tickets, checking individual approvals...")}]));const t=[];for(const a of o)await P(e,a)!==i.A.MasterChef&&t.push(a);if(t.length>0){l((e=>[...e,{type:1,text:"PID ".concat(d,": ").concat(t.length," tokens need approval")}]));try{await w(e,i.A.MasterChef),l((t=>[...t,{type:1,text:"PID ".concat(d,": Approved new MasterChef for all ticket transfers")}]))}catch(a){l((t=>[...t,{type:2,text:"PID ".concat(d,": setApprovalForAll failed, trying individual approvals...")}]));for(const a of t)try{await A(e,i.A.MasterChef,a),l((t=>[...t,{type:1,text:"PID ".concat(d,": Approved token ").concat(a," for new MasterChef")}]))}catch(t){l((e=>[...e,{type:2,text:"PID ".concat(d,": Failed to approve token ").concat(a,": ").concat(t.message)}]))}}}else l((t=>[...t,{type:1,text:"PID ".concat(d,": All tokens already approved for new MasterChef")}]))}await I(e)}}if("0"===o[d].allocPoint.toString())l((t=>[...t,{type:1,text:"PID ".concat(d,": Pool allocPoint is 0, skipping deposit to new MasterChef")}]));else if(D){const a=await R(e),o=await x(e,t.address);let n;if(a)n=o,l((t=>[...t,{type:1,text:"PID ".concat(d,": Token is LP token, using full wallet balance: ").concat((0,B.fn)((0,B.fm)(n)))}]));else{if(!p||p<=0n){l((t=>[...t,{type:1,text:"PID ".concat(d,": Token is not LP token and no calculated amount, skipping deposit to new MasterChef")}]));continue}n=(0,W.A)(o).isLessThan(p)?o:p,l((t=>[...t,{type:1,text:"PID ".concat(d,": Token is not LP token, using calculated amount: ").concat((0,B.fm)(n))}]))}if((0,W.A)(n).isLessThanOrEqualTo(1)){l((t=>[...t,{type:1,text:"PID ".concat(d,": Wallet balance is <= 1, skipping deposit to new MasterChef")}]));continue}l((t=>[...t,{type:1,text:"PID ".concat(d,": Wallet balance: ").concat((0,B.fn)((0,B.fm)(o)),", intended deposit: ").concat((0,B.fn)((0,B.fm)(p)),", actual deposit: ").concat((0,B.fn)((0,B.fm)(n)))}]));const s=await C(e,t.address,i.A.MasterChef);(0,W.A)(s).isGreaterThan(n)?(l((t=>[...t,{type:1,text:"PID ".concat(d,": Current allowance ").concat((0,B.fn)((0,B.fm)(s))," is insufficient, approving...")}])),await(0,V.Wi)(e,i.A.MasterChef,!0)):l((t=>[...t,{type:1,text:"PID ".concat(d,": Current allowance ").concat((0,B.fn)((0,B.fm)(s))," is sufficient, skipping approve")}])),await b(d,n)}l((t=>[...t,{type:1,text:"PID ".concat(d,": Migration for this pool completed successfully! State cleared.")}]))}catch(t){l((e=>[...e,{type:2,text:"PID ".concat(d,": MasterChef migration for this pool FAILED. Details: ").concat(t.message||t)}])),l((t=>[...t,{type:1,text:"Please try again. The script will attempt to recover from the last successful step."}]))}l((t=>[...t,{type:1,text:"--- MasterChef migration process finished. ---"}]))}})(),await(async()=>{l((e=>[...e,{type:1,text:"Starting SousChef migration for user: ".concat(t.address,"...")}]));const e=await k();if(Number(e)<=1)return void l((t=>[...t,{type:2,text:"Fatal: Could not fetch SousChef pool length. Aborting."}]));l((t=>[...t,{type:1,text:"Found ".concat(e," pools in the old SousChef.")}]));const a=await D(Number(e)-1,t.address),o=await S(Number(e)-1),n=await M(Number(e)-1),s=[],r=[];for(let f=0;f<e;f++)try{let e,u;l((t=>[...t,{type:1,text:"--- Processing SousChef PID ".concat(f," ---")}]));let h=a[f].deposit;const m=o[f];if("4"===m.poolType.toString()||"7"===m.poolType.toString()){const e=await T(t.address,f),a=await(0,q.SI)();if(!(0,W.A)(e).isLessThanOrEqualTo(a)){l((t=>[...t,{type:1,text:"PID ".concat(f,": Pool type is ").concat(m.poolType,", but maturity is not 100%. Skipping withdrawal.")}]));continue}}if((0,W.A)(h).isGreaterThan(0)){var c;l((t=>[...t,{type:1,text:"PID ".concat(f,": Staked amount is ").concat((0,B.fn)((0,B.fm)(h)),". Starting withdrawal...")}]));const a=o[f];let n=[];if("1"===a.poolType.toString())try{const e=await N(t.address,f);l((t=>[...t,{type:1,text:"PID ".concat(f,": getUserPoolRegular result: ").concat(e)}]));const a=await(0,q.SI)(),o=[];h=0n,l((t=>[...t,{type:1,text:"PID ".concat(f,": Current timestamp: ").concat(a)}]));for(let t=0;t<e.length;t++)try{const n=e[t];l((e=>[...e,{type:1,text:"PID ".concat(f,": userRegular for rId ").concat(t,":").concat(n)}]));const s=BigInt(n.toString()),r=(Number(s%BigInt(1e10)),Number(s/BigInt(1e10)%BigInt(1e10))),c=Number(s/BigInt(1e20)%BigInt(1e10)),i=s/BigInt(1e40);l((e=>[...e,{type:1,text:"PID ".concat(f,": rId ").concat(t," - start: ").concat(r,", end: ").concat(c,", amount: ").concat((0,B.fn)((0,B.fm)(i)))}]));const d=(0,W.A)(a).isGreaterThanOrEqualTo(r)&&(0,W.A)(a).isLessThanOrEqualTo(c),p=i>0n;l((e=>[...e,{type:1,text:"PID ".concat(f,": rId ").concat(t," - timeInRange: ").concat(d,", hasAmount: ").concat(p)}])),d&&p?(o.push(t),h+=i,l((e=>[...e,{type:1,text:"PID ".concat(f,": rId ").concat(t," is valid")}]))):l((e=>[...e,{type:1,text:"PID ".concat(f,": rId ").concat(t," is invalid")}]))}catch(e){l((a=>[...a,{type:2,text:"PID ".concat(f,": Failed to check userRegular for rId ").concat(t,": ").concat(e.message)}]))}n=o,l((t=>[...t,{type:1,text:"PID ".concat(f,": Filtered valid regularIds:").concat(n)}]))}catch(t){l((e=>[...e,{type:2,text:"PID ".concat(f,": Failed to get userPoolRegular, using empty array:").concat(t.message)}])),n=[]}const s=!1,r=!1;if("1"===a.poolType.toString()){let t=0;if(void 0!==a.redemptionPeriod?t=Number(a.redemptionPeriod):void 0!==a.redemptionDelay?t=Number(a.redemptionDelay):void 0!==a.period&&(t=Number(a.period)),l((e=>[...e,{type:1,text:"PID ".concat(f,": Pool type 1 - redemptionPeriod: ").concat(t,", regularIds.length: ").concat(n.length)}])),isNaN(t)&&(t=0,l((t=>[...t,{type:1,text:"PID ".concat(f,": Could not determine redemption period, assuming 0")}]))),t>0&&0===n.length){l((t=>[...t,{type:1,text:"PID ".concat(f,": Pool type 1 has redemptionPeriod > 0 but no valid regularIds found, skipping withdrawal")}]));continue}0===t&&n.length>0&&(l((t=>[...t,{type:1,text:"PID ".concat(f,": Pool type 1 has redemptionPeriod = 0 but regularIds found, clearing regularIds")}])),n=[])}l((t=>[...t,{type:1,text:"PID ".concat(f,": Withdrawing with regularIds:").concat(n)}]));const i=await O(f,h,n,s,r),m={...i,events:i&&i.events?Object.values(i.events):[]};l((t=>{var e;return[...t,{type:1,text:"PID ".concat(f,": Transaction receipt events:").concat(null===(e=m.events)||void 0===e?void 0:e.map((t=>({name:t.event,args:t.returnValues}))))}]}));let y=null===(c=m.events)||void 0===c?void 0:c.find((t=>"Withdraw"===t.event&&t.returnValues.pid==f));var d,p;y||(y=null===(d=m.events)||void 0===d?void 0:d.find((t=>"Withdraw"===t.event))),y||(y=null===(p=m.events)||void 0===p?void 0:p.find((t=>t.event&&t.event.toLowerCase().includes("withdraw")))),y?(u=y.returnValues.amount,e=a.token,l((t=>[...t,{type:1,text:"PID ".concat(f,": Found event: ").concat(y.event,", amount: ").concat((0,B.fn)((0,B.fm)(u)))}]))):(l((t=>{var e;return[...t,{type:2,text:"PID ".concat(f,": Could not find Withdraw event. Available events:").concat(null===(e=m.events)||void 0===e?void 0:e.map((t=>t.event)))}]})),u=995n*h/1000n,e=a.token,l((t=>[...t,{type:1,text:"PID ".concat(f,": Using staked amount * 99.5% as fallback: ").concat((0,B.fn)((0,B.fm)(u)))}]))),l((t=>[...t,{type:1,text:"PID ".concat(f,": Withdrawal complete. Saved state to localStorage.")}]))}const y=22===f?54:f;if("0"===n[y].allocPoint.toString())l((t=>[...t,{type:1,text:"PID ".concat(f,": Target pool ").concat(y," allocPoint is 0, skipping deposit to new SousChef")}]));else{e||(e=o[f].token);let a=!1;22!==f&&(a=await R(e));const n=await x(e,t.address);let s;if(a&&22!==f)s=n,l((t=>[...t,{type:1,text:"PID ".concat(f,": Token is LP token (not PID 22), using full wallet balance: ").concat((0,B.fn)((0,B.fm)(s)))}]));else{if(!u||u<=0n){l((t=>[...t,{type:1,text:"PID ".concat(f,": Token is not LP token or is PID 22, and no calculated amount, skipping deposit to new SousChef")}]));continue}s=(0,W.A)(n).isLessThan(u)?n:u,l((t=>[...t,{type:1,text:"PID ".concat(f,": Token is not LP token or is PID 22, using calculated amount: ").concat((0,B.fn)((0,B.fm)(s)))}]))}if(s<=1n){l((t=>[...t,{type:1,text:"PID ".concat(f,": Wallet balance is <= 1, skipping deposit to new SousChef")}]));continue}l((t=>[...t,{type:1,text:"PID ".concat(f,": Wallet balance: ").concat((0,B.fn)((0,B.fm)(n)),", intended deposit: ").concat((0,B.fn)((0,B.fm)(u)),", actual deposit: ").concat((0,B.fn)((0,B.fm)(s)))}]));const r=await C(e,t.address,i.A.SousChef);(0,W.A)(r).isLessThan(s)?(l((t=>[...t,{type:1,text:"PID ".concat(f,": Current allowance ").concat((0,B.fn)((0,B.fm)(r))," is insufficient, approving...")}])),await(0,V.Wi)(e,i.A.SousChef,!0)):l((t=>[...t,{type:1,text:"PID ".concat(f,": Current allowance ").concat((0,B.fn)((0,B.fm)(r))," is sufficient, skipping approve")}])),await _(y,s),l((t=>[...t,{type:1,text:"PID ".concat(f,": Deposit to new SousChef pool ").concat(y," complete.")}]))}const g=a[f],v=await j(f,t.address),P=BigInt(v||0)+BigInt(g.reward||0);P>0n&&(s.push(f),r.push(P),l((t=>[...t,{type:1,text:"PID ".concat(f,": Queued rewards for claiming: ").concat((0,B.fn)((0,B.fm)(P)))}]))),l((t=>[...t,{type:1,text:"PID ".concat(f,": SousChef processing for this pool completed successfully!")}]))}catch(t){l((e=>[...e,{type:2,text:"PID ".concat(f,": SousChef migration for this pool FAILED. Details:").concat(t.message||t)}])),l((t=>[...t,{type:1,text:"Please try again. The script will attempt to recover from the last successful step."}]))}if(s.length>0){l((t=>[...t,{type:1,text:"--- Claiming all queued rewards from Old SousChef ---"}]));try{const e=22,a=await F(),{_reserve0:o,_reserve1:n}=await L(a);let c=[99n*BigInt(o)/100n,BigInt(o),99n*BigInt(n)/100n,BigInt(n)];await E(c,s,r,e,t.address),l((t=>[...t,{type:1,text:"All rewards claimed successfully."}]))}catch(t){l((e=>[...e,{type:2,text:"Failed to claim all rewards. Details:".concat(t.message||t)}]))}}else l((t=>[...t,{type:1,text:"No rewards to claim from SousChef."}]));l((t=>[...t,{type:1,text:"--- SousChef migration process finished. ---"}]))})(),a(!1)):(0,r.y8)("请链接钱包后再试")},children:"一键迁移"})}),(0,U.jsxs)("div",{className:"common-block",children:[(0,U.jsx)("div",{className:n.text1,children:"迁移日志"}),(0,U.jsx)("div",{className:n.log,ref:G,children:c.map(((t,e)=>(0,U.jsx)("div",{className:1===t.type?n.text2:n.text3,children:t.text},e)))})]}),(0,U.jsx)("div",{className:"common-block",children:(0,U.jsx)("div",{className:"button-click button-common height-56",onClick:()=>(0,B.uX)(JSON.stringify(c),!0),children:"一键复制日志信息"})})]})}}}]);